import { Memory } from '../rules/Memory'
import { Card, cards } from './Card'

export enum Age {
  Prehistory = 1,
  Antiquity,
  MiddleAges
}

export const AgesCardsListing: Record<Age, Partial<Record<Card, number>>> = {
  [Age.Prehistory]: {
    [Card.Forest]: 2,
    [Card.Hills]: 2,
    [Card.Mountain]: 1,
    [Card.Peninsula]: 1,
    [Card.Lowland]: 1,
    [Card.River]: 2,
    [Card.Swamp]: 2,
    [Card.Valley]: 1,
    [Card.Woodlands]: 2,
    [Card.LascauxCave]: 1,
    [Card.Megaliths]: 3,
    [Card.Stonehenge]: 1,
    [Card.Australopithecus]: 3,
    [Card.Bear]: 1,
    [Card.Crocodile]: 1,
    [Card.CroMagnon]: 1,
    [Card.HomoErectus]: 2,
    [Card.HomoSapiens]: 1,
    [Card.Mammoth]: 1,
    [Card.Neanderthal]: 1,
    [Card.Tiger]: 1,
    [Card.WoollyRhinoceros]: 1,
    [Card.TheFire]: 1,
    [Card.FuneralRites]: 1,
    [Card.Wildcrafting]: 2,
    [Card.Fishing]: 2,
    [Card.Hunting]: 2,
    [Card.Sedentism]: 1,
    [Card.Tools]: 1,
    [Card.Weapons]: 1,
    [Card.Cannibals]: 1,
    [Card.Wolves]: 1,
    [Card.Earthquake]: 1,
    [Card.HarshWinter]: 1,
    [Card.Famine1]: 1,
    [Card.VolcanicEruption1]: 1
  },
  [Age.Antiquity]: {
    [Card.Agriculture]: 1,
    [Card.AlexanderTheGreat]: 1,
    [Card.AlluvialPlain]: 2,
    [Card.Architecture]: 1,
    [Card.Aristotle]: 1,
    [Card.Astronomy]: 1,
    [Card.Attila]: 1,
    [Card.BarbarianInvasions]: 2,
    [Card.Bocage]: 1,
    [Card.CivilWar]: 1,
    [Card.Cleopatra]: 1,
    [Card.Coast]: 2,
    [Card.ColossusOfRhodes]: 1,
    [Card.Desert]: 1,
    [Card.Domestication]: 1,
    [Card.Epidemic]: 1,
    [Card.FertilePlain]: 2,
    [Card.Flood]: 1,
    [Card.GreatPyramidOfGiza]: 1,
    [Card.GreatWallOfChina]: 1,
    [Card.HangingGardensOfBabylon]: 1,
    [Card.Hannibal]: 1,
    [Card.Hippocrates]: 1,
    [Card.HorsebackRiding]: 1,
    [Card.IronWorking]: 1,
    [Card.JuliusCaesar]: 1,
    [Card.LighthouseOfAlexandria]: 1,
    [Card.MacedonianPhalanx]: 1,
    [Card.Mathematics]: 1,
    [Card.MausoleumOfHalicarnassus]: 1,
    [Card.Medicine]: 1,
    [Card.NebuchadnezzarII]: 1,
    [Card.Pericles]: 1,
    [Card.Philosophy]: 1,
    [Card.Piracy]: 2,
    [Card.Pompei]: 1,
    [Card.Pythagoras]: 1,
    [Card.RomanLegions]: 1,
    [Card.Sailing]: 1,
    [Card.SpartacusUprising]: 1,
    [Card.Famine2]: 1,
    [Card.StatueOfZeus]: 1,
    [Card.Steppes]: 1,
    [Card.SunTzu]: 1,
    [Card.TheWheel]: 1,
    [Card.VolcanicEruption2]: 1,
    [Card.WildIsland]: 2,
    [Card.Writing]: 1
  },
  [Age.MiddleAges]: {
    [Card.Alchemy]: 1,
    [Card.Alembic]: 1,
    [Card.Alhambra]: 1,
    [Card.AlKhawarizmi]: 1,
    [Card.Armor]: 1,
    [Card.Artillery]: 1,
    [Card.Astrolabe]: 1,
    [Card.Avicenna]: 1,
    [Card.Barony]: 3,
    [Card.BlackDeath]: 1,
    [Card.Camelot]: 1,
    [Card.Castle]: 1,
    [Card.Charlemagne]: 1,
    [Card.Chivalry]: 1,
    [Card.Cholera]: 1,
    [Card.Compass]: 1,
    [Card.County]: 3,
    [Card.Crossbow]: 1,
    [Card.Duchy]: 3,
    [Card.Famine3]: 1,
    [Card.Heresy]: 1,
    [Card.HimejiCastle]: 1,
    [Card.Jerusalem]: 1,
    [Card.JoanOfArc]: 1,
    [Card.KingArthur]: 1,
    [Card.Kingdom]: 3,
    [Card.LeCid]: 1,
    [Card.Longbow]: 1,
    [Card.Mangonel]: 1,
    [Card.MarcoPolo]: 1,
    [Card.Mill]: 1,
    [Card.MinamotoNoYoritomo]: 1,
    [Card.NotreDame]: 1,
    [Card.Obscurantism]: 1,
    [Card.Parchment]: 1,
    [Card.Plough]: 1,
    [Card.Poison]: 1,
    [Card.RichardTheLionheart]: 1,
    [Card.RobinHood]: 1,
    [Card.SaintThomasAquinas]: 1,
    [Card.Saladin]: 1,
    [Card.Saxons]: 2,
    [Card.TemplarOrder]: 1,
    [Card.TheCrusades]: 1,
    [Card.Tithe]: 1,
    [Card.TowerOfPisa]: 1,
    [Card.Vikings]: 2,
    [Card.WilliamTheConqueror]: 1,
    [Card.WilliamWallace]: 1
  }
}

export const prehistoryCards = cards.filter(card => card < 100)
export const antiquityCards = cards.filter(card => card >= 100 && card < 200)
export const middleAgesCards = cards.filter(card => card >= 200)

export const AgesCards: Record<Age, Card[]> = {
  [Age.Prehistory]: prehistoryCards,
  [Age.Antiquity]: antiquityCards,
  [Age.MiddleAges]: middleAgesCards
}

export const getCardAge = (card: Card): Age => Math.ceil(card / 100)

export const agesScoreMemory: Record<Age, Memory> = {
  [Age.Prehistory]: Memory.PrehistoryScore,
  [Age.Antiquity]: Memory.AntiquityScore,
  [Age.MiddleAges]: Memory.MiddleAgesScore,
}